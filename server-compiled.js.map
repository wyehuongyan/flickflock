{"version":3,"sources":["server.js"],"names":[],"mappings":"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","file":"server-compiled.js","sourcesContent":["// Babel ES6/JSX Compiler\nrequire('babel-core/register');\n\nvar request = require('request');\nvar xml2js = require('xml2js');\nvar mongoose = require('mongoose');\nvar swig  = require('swig');\nvar React = require('react');\nvar ReactDOM = require('react-dom/server');\nvar Router = require('react-router');\nvar express = require('express');\nvar path = require('path');\nvar logger = require('morgan');\nvar bodyParser = require('body-parser');\n\nvar routes = require('./app/routes');\nvar characterRoutes = require('./app/routes/Characters.jsx');\nvar config = require('./config');\n\nvar app = express();\n\napp.set('port', process.env.port || 3000);\n\nmongoose.connect(config.database);\nmongoose.connection.on('error', function() {\n    console.info('Error: Could not connect to MongoDB. Did you forget to run `mongod`?');\n});\n\n// express middle ware\napp.use(logger('dev'));\napp.use(bodyParser.json()); // parse JSON\napp.use(bodyParser.urlencoded({ extended: false })); // parse x-www-urlencoded form data\napp.use(express.static(path.join(__dirname, 'public'))); // static assets folder\n\n// routing\ncharacterRoutes(app);\n\n// react middle ware\napp.use(function(req, res) {\n    Router.match({ routes: routes.default, location: req.url }, function(err, redirectLocation, renderProps) {\n        if (err) {\n            res.status(500).send(err.message)\n        } else if (redirectLocation) {\n            res.status(302).redirect(redirectLocation.pathname + redirectLocation.search)\n        } else if (renderProps) {\n            var html = ReactDOM.renderToString(React.createElement(Router.RoutingContext, renderProps));\n            var page = swig.renderFile('views/index.html', { html: html });\n            res.status(200).send(page);\n        } else {\n            res.status(404).send('Page Not Found')\n        }\n    });\n});\n\n/*\n// listen\napp.listen(app.get('port'), function() {\n   console.log('Express server listening on port ' + app.get('port'));\n});\n*/\n\n/**\n * Socket.io stuff.\n */\nvar server = require('http').createServer(app);\nvar io = require('socket.io')(server);\nvar onlineUsers = 0;\n\nio.sockets.on('connection', function(socket) {\n    onlineUsers++;\n\n    io.sockets.emit('onlineUsers', { onlineUsers: onlineUsers });\n\n    socket.on('disconnect', function() {\n        onlineUsers--;\n        io.sockets.emit('onlineUsers', { onlineUsers: onlineUsers });\n    });\n});\n\nserver.listen(app.get('port'), function() {\n    console.log('Express server listening on port ' + app.get('port'));\n});"]}